{"version":3,"sources":["default/menu.js","rjsf-patch/utils.js","default/settings.js","rjsf-patch/ArrayField.jsx","rjsf-patch/BooleanField.jsx","rjsf-patch/StringField.jsx","rjsf-patch/SchemaField.jsx","core.js","reducers.js","store.js","InlineEditor.jsx","Tree/Menu.jsx","Tree/TreeNodeTitle.jsx","Tree/Tree.jsx","Tree/index.js","rjsf-patch/Form.jsx","Template/Template.jsx","Template/connectors.jsx","Template/index.jsx","views/FormView.jsx","JsonEditor.jsx","views/SchemaView.jsx","views/UiSchemaView.jsx","views/FormDataView.jsx","Editor/JsonEditor.jsx","Editor/BasicEditor.jsx","Editor/index.jsx","Toolbar.jsx","Settings.jsx","App.jsx","serviceWorker.js","index.js"],"names":["basic","schema","type","title","properties","object","text","checkbox","checkboxes","items","enum","uniqueItems","dropdown","enumNames","number","textarea","datetime","uiSchema","module","exports","Error","msg","message","showIcon","getWidget","_getWidget","e","toString","TitleField","props","id","required","getDefaultRegistry","fields","require","default","ArrayField","StringField","BooleanField","SchemaField","widgets","definitions","formContext","leftSiderWidth","rightSiderWidth","formWidth","isInlineMode","subViews","ArrayFieldPatched","this","idSchema","formData","disabled","readonly","autofocus","onBlur","onFocus","registry","rawErrors","itemsSchema","retrieveSchema","enumOptions","optionsList","getUiOptions","widget","options","Widget","$id","multiple","onChange","onSelectChange","value","name","Array","isArray","oneOf","map","option","const","label","undefined","DescriptionField","defaultProps","format","isSelect","defaultWidget","hasWidget","placeholder","PatchedSchemaField","error","info","notification","description","duration","isEmptyObject","obj","i","isLeaf","node","schema2tree","schema2node","FORCE_CHANGE_KEY","forceChange","Date","now","process","path","key","join","length","children","child","push","nextPath","a","additionalItems","getNodeByPath","tree","find","getNode","split","updateParentKey","parentKey","Object","assign","getNodeParentKey","substring","updateNodeParentKeyAndName","newKey","updateNodeByNewChildren","oldNode","newChildren","newSchema","newProperties","newItemsNode","newAdditionalItemsNode","updateSchema","newUiSchema","startsWith","empty","updateUiSchema","newNode","updateArrayIndex","_removeNodeByPath","head","tail","arrayItemsFlag","removed","newTree","filter","newRequired","removeNodeByPath","removeNode","_addNodeByPath","position","node2Add","added","cn","newNodeChildren","addNodeByPath","addNode","targetKey","_moveNodeByPath","sh","st","th","tt","updated","node2move","tmpTree","moveNodeByPath","sourceNode","targetNode","moveNode","sourceKey","allowedUpdatedTypes","updateNodeByPath","nodeUpdate","_updateNodeByPath","includes","nu","typeUpdated","oldSchema","oldUiSchema","updateNode","getNodeByRjsfId","rjsfId","slice","indexOf","index","isNaN","rest","n","defaultMenu","defaultMenuSchema","emptyTree","reducer","combineReducers","state","action","newState","history","removeUnnecessaryHistory","undoable","payload","targetNodeKey","node2add","source","target","includeAction","activeNodeKey","settings","defaultSettings","menu","menuOpenKeys","persistConfig","storage","stateReconciler","hardSet","throttle","initTree","firstName","lastName","age","bio","password","minLength","telephone","classNames","date","inputType","persistedReducer","persistReducer","present","store","createStore","past","future","persistor","persistStore","InlineEditor","setState","onCompleteEditing","editing","newValue","trim","onStartEditing","stopPropagation","preventDefault","input","focus","onCancelEditing","nextProps","ref","r","onKeyUp","keyCode","EditOutlined","onClick","renderEditing","renderView","Component","SubMenu","Menu","Item","nameGen","occupied","newName","AddItemMenu","onAddNode","menuTree","menuOpenChange","mode","theme","openKeys","onOpenChange","b","React","connect","dispatch","keys","TreeNodeTitle","updateNodeName","searchValue","isRoot","indexBefore","toLowerCase","indexAfter","style","display","color","className","placement","trigger","overlay","PlusCircleOutlined","onConfirm","okText","cancelText","CloseCircleFilled","PureComponent","TreeNode","Tree","Search","Input","Demo","onDrop","dropKey","eventKey","dragKey","dragNode","dropPos","pos","dropPosition","Number","onExpand","expandedKeys","newSearchExpanded","loop","data","item","parents","searchExpanded","setActiveNode","selectedKeys","draggable","onDragEnter","onSelect","selected","blockNode","selectedKey","updateNodeTitle","updateMode","FormPatch","ArrayFieldTemplate","ObjectFieldTemplate","FieldTemplate","Form","Label","htmlFor","TextArea","ACTIVE_STYLE","backgroundColor","ExtendedInlineEditor","InlineTextAreaEditor","autoSize","ButtonGroup","select","remove","href","SelectOutlined","DeleteOutlined","errors","help","hidden","displayLabel","active","updateTitle","updateDescription","updateHelp","labelElement","descriptionElement","helpElement","_label","_description","_help","prop","content","titleElement","_title","FormView","setFormData","liveValidate","idPrefix","isLiveValidate","JsonEditor","JSON","parse","string","onClickPrettify","stringify","objA","objB","hasOwnProperty","shallowEqual","nextState","errorMessage","matched","exec","textAreaRef","selectionStart","selectionEnd","renderErrorMessage","setTree","json2schema","charAt","toUpperCase","name2title","isInteger","s","genForm","NodeJsonEditor","schemaJsonString","uiSchemaJsonString","rschema","Option","Select","FormItemTemplate","actions","size","shape","icon","CloseOutlined","Meta","TimeThrottle","timer","clearTimeout","setTimeout","onSubmitValue","onRemove","TimeThrottleInput","TimeThrottleTextArea","TimeThrottleRange","min","max","width","textAlign","borderLeft","pointerEvents","lodash","boolean","radio","uri","file","updown","range","integer","array","files","toPairs","flatMap","groupBy","t","types","update","availableTypes","ClassNamesEditor","colSizes","onSliderChange","col","found","newClassNames","perfix","v","Set","cols","extractCol","newOptions","align","xs","renderMenu","CaretDownOutlined","sliderValue","tokenSeparators","updateUiOptions","availableWidgets","f","showSearch","pattern","rangeMeta","match","minp","maxp","itemRange","defaultChecked","values","enumKey","enumName","formatOptions","BasicEditor","l","addable","editable","PlusOutlined","itemLayout","dataSource","renderItem","TabPane","Tabs","editorList","Editor","uiOptionsUpdate","uiOptions","newUiOptions","filteredEditors","defaultActiveKey","tab","margin","schemaUpdate","uiSchemaUpdate","read","reader","FileReader","p","Promise","resolve","onload","contents","result","readAsText","buttonStyle","marginLeft","Toolbar","save","filename","json","window","document","createElement","URL","createObjectURL","Blob","download","body","appendChild","click","removeChild","write","open","undo","redo","updateSettings","newForm","loadFile","accept","FileAddOutlined","FolderOpenOutlined","SaveOutlined","UndoOutlined","RedoOutlined","ActionTypes","UNDO","REDO","confirm","Modal","tipFormatter","flag","innerWidth","Settings","included","left","right","checked","rootNode","setMenu","sytle","okType","closable","maskClosable","onOk","localStorage","removeItem","location","reload","siderWidth","inlineMode","reset","List","listItems","Header","Layout","Sider","Content","App","collapsed","toggle","collapsible","background","padding","overflow","boxShadow","height","minHeight","bordered","verticalAlign","SchemaView","UiSchemaView","FormDataView","AppContainer","loading","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.341338f3.chunk.js","sourcesContent":["const basic = {\n  schema: {\n    type: 'object',\n    title: 'Basic',\n    properties: {\n      object: { type: 'object', title: 'Object', properties: {} },\n      text: { type: 'string', title: 'Text' },\n      checkbox: { type: 'boolean', title: 'Checkbox' },\n      checkboxes: {\n        type: 'array',\n        title: 'Check Boxes',\n        items: {\n          type: 'string',\n          enum: ['option-1', 'option-2', 'option-3'],\n        },\n        uniqueItems: true,\n      },\n      dropdown: {\n        type: 'string',\n        title: 'Dropdown',\n        enum: ['option-1', 'option-2', 'option-3'],\n        enumNames: ['Option 1', 'Option 2', 'Option 3'],\n      },\n      number: { type: 'number', title: 'Number' },\n      textarea: { type: 'string', title: 'Text Area' },\n      datetime: { type: 'string', title: 'Date Time' },\n    },\n  },\n  uiSchema: {\n    textarea: { 'ui:widget': 'textarea' },\n    datetime: { 'ui:widget': 'datetime' },\n    checkboxes: {\n      'ui:widget': 'checkboxes',\n    },\n  },\n};\n\nmodule.exports = {\n  schema: {\n    type: 'object',\n    properties: {\n      basic: basic.schema,\n    },\n  },\n  uiSchema: {\n    basic: basic.uiSchema,\n  },\n};\n","import React from 'react';\nimport { Alert } from 'antd';\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport StringField from './StringField';\nimport SchemaField from './SchemaField';\nimport { getWidget as _getWidget } from 'react-jsonschema-form/lib/utils';\nexport * from 'react-jsonschema-form/lib/utils';\n\nfunction Error(msg) {\n  return () => <Alert message={msg} type=\"error\" showIcon />;\n}\n\nexport function getWidget(...args) {\n  try {\n    return _getWidget(...args);\n  } catch (e) {\n    return Error(e.toString());\n  }\n}\n\nfunction TitleField(props) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required ? '*' : null}\n    </legend>\n  );\n}\n\nexport function getDefaultRegistry() {\n  const fields = {\n    ...require('react-jsonschema-form/lib/components/fields').default,\n    ArrayField,\n    StringField,\n    BooleanField,\n    TitleField,\n    SchemaField,\n  };\n  return {\n    fields,\n    widgets: require('react-jsonschema-form/lib/components/widgets').default,\n    definitions: {},\n    formContext: {},\n  };\n}\n","module.exports = {\n  leftSiderWidth: 300,\n  rightSiderWidth: 360,\n  formWidth: 600,\n  isInlineMode: true,\n  subViews: ['schema', 'uiSchema', 'formData'],\n};\n","import React from 'react';\nimport ArrayField from 'react-jsonschema-form/lib/components/fields/ArrayField';\n\nimport { getWidget, getUiOptions, optionsList, retrieveSchema, getDefaultRegistry } from './utils';\n\nclass ArrayFieldPatched extends ArrayField {\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData,\n      disabled,\n      readonly,\n      autofocus,\n      onBlur,\n      onFocus,\n      registry = getDefaultRegistry(),\n      rawErrors,\n    } = this.props;\n    const items = this.props.formData;\n    const { widgets, definitions, formContext } = registry;\n    const itemsSchema = retrieveSchema(schema.items, definitions, formData);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', ...options } = {\n      ...getUiOptions(uiSchema),\n      enumOptions,\n    };\n    const Widget = getWidget(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n}\n\nexport default ArrayFieldPatched;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as types from 'react-jsonschema-form/lib/types';\n\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from './utils';\n\nfunction BooleanField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry = getDefaultRegistry(),\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, fields } = registry;\n  const { widget = 'checkbox', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map((option) => ({\n        ...option,\n        title: option.title || (option.const === true ? 'Yes' : 'No'),\n      })),\n    });\n  } else {\n    enumOptions = optionsList({\n      enum: schema.enum || [true, false],\n      enumNames: schema.enumNames || (schema.enum && schema.enum[0] === false ? ['No', 'Yes'] : ['Yes', 'No']),\n    });\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n      DescriptionField={fields.DescriptionField}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default BooleanField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getWidget, getUiOptions, isSelect, optionsList, getDefaultRegistry, hasWidget } from './utils';\n\nfunction StringField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    registry = getDefaultRegistry(),\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext } = registry;\n  const enumOptions = isSelect(schema) && optionsList(schema);\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  StringField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    formData: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    registry: PropTypes.shape({\n      widgets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])).isRequired,\n      fields: PropTypes.objectOf(PropTypes.func).isRequired,\n      definitions: PropTypes.object.isRequired,\n      formContext: PropTypes.object.isRequired,\n    }),\n    formContext: PropTypes.object.isRequired,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    rawErrors: PropTypes.arrayOf(PropTypes.string),\n  };\n}\n\nStringField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default StringField;\n","import SchemaField from 'react-jsonschema-form/lib/components/fields/SchemaField';\nimport { notification } from 'antd';\n\nexport default class PatchedSchemaField extends SchemaField {\n  componentDidCatch(error, info) {\n    notification.error({\n      message: `Error: ${this.props.idSchema.$id}`,\n      description: error.toString(),\n      duration: 0,\n    });\n  }\n}\n","function isEmptyObject(obj) {\n  if (!obj) return true;\n  for (const i in obj) {\n    if (obj[i] !== undefined) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isLeaf(node) {\n  return node.isLeaf;\n}\n\nfunction schema2tree(name, schema, uiSchema) {\n  return [schema2node([name], schema, uiSchema)];\n}\n\nlet forceChange = ((FORCE_CHANGE_KEY) => (obj) => {\n  // workaround for forcing rjsf to rerender because the schema still deep equal to after reordering properties.\n  if (FORCE_CHANGE_KEY in obj) {\n    delete obj[FORCE_CHANGE_KEY];\n  } else {\n    obj[FORCE_CHANGE_KEY] = undefined;\n  }\n})(`__${Date.now()}__`);\n\ntry {\n  if (process.env.NODE_ENV === 'test') {\n    forceChange = (a) => a;\n  }\n} catch (e) {}\n\nfunction schema2node(path, schema, uiSchema) {\n  if (!schema) return null;\n  const key = path.join('.');\n  const name = path[path.length - 1];\n  if (schema.type === 'object') {\n    let children = [];\n    for (const i in schema.properties) {\n      const nextPath = [...path, i];\n      const child = schema2node(nextPath, schema.properties[i], uiSchema && uiSchema[i]);\n      if (child) children.push(child);\n    }\n    return {\n      key,\n      name,\n      //path,\n      schema,\n      uiSchema,\n      children,\n    };\n  }\n  if (schema.type === 'array') {\n    let children;\n    if (Array.isArray(schema.items)) {\n      const nextPath = [...path, '[items]'];\n      children = [\n        {\n          key: key + '.[items]',\n          name: '[items]',\n          //path: nextPath,\n          children: schema.items.map((a, i) =>\n            schema2node([...nextPath, i.toString()], schema.items[i], uiSchema && uiSchema.items && uiSchema.items[i])\n          ),\n        },\n      ];\n      if ('additionalItems' in schema) {\n        const nextPath = [...path, 'additionalItems'];\n        children.push(schema2node(nextPath, schema.additionalItems, uiSchema && uiSchema.additionalItems));\n      }\n    } else {\n      children = [schema2node([...path, 'items'], schema.items, uiSchema && uiSchema.items)];\n    }\n\n    return {\n      key,\n      name,\n      schema,\n      uiSchema,\n      children,\n      //path,\n    };\n  }\n  return {\n    key,\n    name,\n    //path,\n    schema,\n    uiSchema,\n    isLeaf: true,\n  };\n}\n\nfunction getNodeByPath(tree, path) {\n  let node;\n  let children = tree;\n  for (const i of path) {\n    node = children.find((a) => a.name === i);\n    if (!node) return null;\n    children = node.children;\n  }\n  return node;\n}\n\nfunction getNode(tree, key) {\n  return getNodeByPath(tree, key.split('.'));\n}\n\nfunction updateParentKey(tree, parentKey) {\n  return tree.map((node) => {\n    const key = parentKey + '.' + node.name;\n    return Object.assign(\n      {},\n      node,\n      {\n        key: parentKey + '.' + node.name,\n      },\n      node.children && {\n        children: updateParentKey(node.children, key),\n      }\n    );\n  });\n}\n\nfunction getNodeParentKey(node) {\n  return node.key.substring(0, node.key.length - node.name.length - 1);\n}\n\nfunction updateNodeParentKeyAndName(node, parentKey, name) {\n  if (!name) {\n    name = node.name;\n  }\n  if (!parentKey) {\n    parentKey = getNodeParentKey(node);\n  }\n  const newKey = parentKey ? parentKey + '.' + name : name;\n  if (node.key === newKey) return node;\n  return Object.assign(\n    {},\n    node,\n    {\n      name,\n      key: newKey,\n    },\n    node.children && {\n      children: updateParentKey(node.children, newKey),\n    }\n  );\n}\n\nfunction updateSchema(node, newChildren) {\n  let newSchema = Object.assign({}, node.schema);\n  if (node.schema.type === 'object') {\n    let newProperties = {};\n    for (const child of newChildren) {\n      newProperties[child.name] = child.schema;\n    }\n    newSchema.properties = newProperties;\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      newSchema = Object.assign({}, node.schema);\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          newSchema.items = newItemsNode.children.map((a) => a.schema);\n        } else {\n          delete newSchema.items;\n        }\n      } else {\n        // additionalItems field updated\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newSchema.additionalItems = newAdditionalItemsNode.schema;\n        } else {\n          delete newSchema.additionalItems;\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode) {\n        newSchema.items = newItemsNode.schema;\n      } else {\n        delete newSchema.items;\n      }\n    }\n  }\n  return newSchema;\n}\n\nfunction updateUiSchema(node, newChildren) {\n  let newUiSchema = {};\n  for (const i in node.uiSchema) {\n    if (i.startsWith('ui:') || i === 'classNames') {\n      newUiSchema[i] = node.uiSchema[i];\n    }\n  }\n  if (node.schema.type === 'object') {\n    for (const child of newChildren) {\n      if (child.uiSchema) {\n        newUiSchema[child.name] = child.uiSchema;\n      }\n    }\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          let empty = true;\n          newUiSchema.items = newItemsNode.children.map((a) => {\n            empty = empty && !a.uiSchema;\n            return a.uiSchema || null;\n          });\n          if (empty) {\n            delete newUiSchema.items;\n          }\n        }\n        if ('additionalItems' in node.uiSchema) {\n          newUiSchema.additionalItems = node.uiSchema.additionalItems;\n        }\n      } else {\n        // additionalItems field updated\n        if ('items' in node.uiSchema) {\n          newUiSchema.items = node.uiSchema.items;\n        }\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newUiSchema.additionalItems = newItemsNode.children.map((a) => a.schema);\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode && newItemsNode.uiSchema) {\n        newUiSchema.items = newItemsNode.uiSchema;\n      }\n    }\n  }\n  return newUiSchema;\n}\n\nfunction updateNodeByNewChildren(oldNode, newChildren) {\n  if (!oldNode.schema) {\n    return { ...oldNode, children: newChildren };\n  }\n  const schema = updateSchema(oldNode, newChildren);\n  const uiSchema = updateUiSchema(oldNode, newChildren);\n  const newNode = Object.assign({}, oldNode, {\n    schema,\n    uiSchema,\n    children: newChildren,\n  });\n  if (isEmptyObject(uiSchema)) {\n    delete newNode.uiSchema;\n  }\n  return newNode;\n}\n\nfunction updateArrayIndex(tree) {\n  return tree.map((node, i) =>\n    node.name === i.toString() ? node : updateNodeParentKeyAndName(node, null, i.toString())\n  );\n}\n\nfunction _removeNodeByPath(tree, [head, ...tail], arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let removed = false;\n  let newTree = [];\n  if (!tail.length) {\n    let newTree = tree.filter((a) => a.name !== head);\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return newTree.length === tree.length ? tree : newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _removeNodeByPath(node.children, tail, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    removed = true;\n    let newNode = updateNodeByNewChildren(node, newChildren);\n    let newSchema = null;\n    if (tail.length === 1 && (newSchema = newNode.schema) && newSchema.required) {\n      const newRequired = newSchema.required.filter((a) => a !== tail[0]);\n      if (newRequired.length !== newSchema.required.length) {\n        newNode.schema = Object.assign({}, newSchema, {\n          required: newRequired.length ? newRequired : undefined,\n        });\n      }\n    }\n    newTree.push(newNode);\n  }\n  return removed ? newTree : tree;\n}\n\nfunction removeNodeByPath(tree, path) {\n  return _removeNodeByPath(tree, path);\n}\n\nfunction removeNode(tree, key) {\n  return _removeNodeByPath(tree, key.split('.'));\n}\n\nfunction _addNodeByPath(tree, [head, ...tail], position, node2Add, arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let added = false;\n  let newTree = [];\n  if (!tail.length) {\n    tree = tree || [];\n    let added = false;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name !== head) {\n        newTree.push(cn);\n        continue;\n      }\n      added = true;\n      if (position < 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n      if (position === 0) {\n        if (isLeaf(cn)) return tree;\n        if (!arrayItemsFlag && cn.children.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n\n        let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2Add, cn.key)];\n        if (arrayItemsFlag === 1) {\n          newNodeChildren = updateArrayIndex(newNodeChildren);\n        }\n        newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n      } else {\n        newTree.push(cn);\n      }\n      if (position > 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n    }\n    if (!added) return tree;\n    if (arrayItemsFlag === 2) {\n      return updateArrayIndex(newTree);\n    }\n    return newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _addNodeByPath(node.children, tail, position, node2Add, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    added = true;\n    newTree.push(updateNodeByNewChildren(node, newChildren));\n  }\n  return added ? newTree : tree;\n}\n\nfunction addNodeByPath(tree, [head, ...tail], position, newNode) {\n  return _addNodeByPath(tree, [head, ...tail], position, newNode);\n}\n\nfunction addNode(tree, targetKey, position, newNode) {\n  return _addNodeByPath(tree, targetKey.split('.'), position, newNode);\n}\n\nfunction _moveNodeByPath(tree, [sh, ...st], [th, ...tt], position, arrayItemsFlag = 0) {\n  if (!sh) return tree;\n  if (sh === th && tt.length) {\n    let newTree = [];\n    let updated = false;\n    for (const node of tree) {\n      if (node.name !== sh) {\n        newTree.push(node);\n        continue;\n      }\n      if (isLeaf(node)) return tree;\n      if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n        arrayItemsFlag = 1;\n      } else if (arrayItemsFlag === 1 && sh === '[items]') {\n        arrayItemsFlag = 2;\n      } else {\n        arrayItemsFlag = 0;\n      }\n      const newChildren = _moveNodeByPath(node.children, st, tt, position, arrayItemsFlag);\n      if (newChildren === node.children) {\n        // no change\n        return tree;\n      }\n      updated = true;\n      if (tt.length === 1 && st.length === 1 && node.schema && node.schema.type === 'object') {\n        // reorder object properties\n        let properties = {};\n        for (const child of newChildren) {\n          properties[child.name] = child.schema;\n        }\n        let schema = Object.assign({}, node.schema, {\n          properties,\n        });\n        forceChange(schema);\n        newTree.push(\n          Object.assign({}, node, {\n            schema,\n            children: newChildren,\n          })\n        );\n      } else {\n        newTree.push(updateNodeByNewChildren(node, newChildren));\n      }\n    }\n    return updated ? newTree : tree;\n  }\n\n  if (!st.length && !tt.length) {\n    let newTree = [];\n    let updated = false;\n    const node2move = tree.find((a) => a.name === sh);\n    if (!node2move) return tree;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name === sh) continue;\n      if (cn.name === th) {\n        updated = true;\n        if (position < 0) newTree.push(node2move);\n        if (position === 0) {\n          if (isLeaf(cn)) return tree;\n          let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2move, cn.key)];\n          if (arrayItemsFlag === 1) {\n            newNodeChildren = updateArrayIndex(newNodeChildren);\n          }\n          newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n        } else {\n          newTree.push(cn);\n        }\n        if (position > 0) newTree.push(node2move);\n      } else {\n        newTree.push(cn);\n      }\n    }\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return updated ? newTree : tree;\n  }\n\n  const node2move = getNodeByPath(tree, [sh, ...st]);\n  if (!node2move) return tree;\n  const tmpTree = _removeNodeByPath(tree, [sh, ...st], arrayItemsFlag);\n  const newTree = _addNodeByPath(tmpTree, [th, ...tt], position, node2move, arrayItemsFlag);\n  return newTree === tmpTree ? tree : newTree;\n}\n\nfunction moveNodeByPath(tree, sourceNode, targetNode, position) {\n  return _moveNodeByPath(tree, sourceNode, targetNode, position);\n}\nfunction moveNode(tree, sourceKey, targetKey, position) {\n  return _moveNodeByPath(tree, sourceKey.split('.'), targetKey.split('.'), position);\n}\n\nvar allowedUpdatedTypes = ['string', 'number', 'integer', 'boolean'];\n\nfunction _updateNodeByPath(tree, [head, ...tail], nodeUpdate) {\n  let newTree = [];\n  let updated = false;\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    let newNode = Object.assign({}, node);\n    if (!tail.length) {\n      const { schema, uiSchema, name } = nodeUpdate;\n      let nu = Object.assign({}, nodeUpdate);\n      delete nu.schema;\n      delete nu.uiSchema;\n      delete nu.name;\n      delete nu.children;\n      delete nu.key;\n      newNode = Object.assign(newNode, nu);\n      let typeUpdated = false;\n      if (schema) {\n        updated = true;\n        const oldSchema = node.schema;\n        let newSchema = Object.assign({}, schema);\n        if (!newSchema.type) {\n          newSchema.type = oldSchema.type;\n        } else {\n          if (newSchema.type !== oldSchema.type) {\n            if (allowedUpdatedTypes.includes(newSchema.type) && allowedUpdatedTypes.includes(oldSchema.type)) {\n              typeUpdated = true;\n              for (const i in newSchema) {\n                if (!['type', 'title', 'description'].includes(i)) {\n                  delete newSchema[i];\n                }\n              }\n            } else {\n              return tree;\n            }\n          }\n        }\n\n        if (newSchema.type === 'object') {\n          newSchema.properties = oldSchema.properties;\n        }\n        if (newSchema.type === 'array') {\n          newSchema.items = oldSchema.items;\n          newSchema.additionalItems = oldSchema.items;\n        }\n        newNode.schema = newSchema;\n      }\n      if (uiSchema) {\n        updated = true;\n        const oldUiSchema = node.uiSchema;\n        const newUiSchema = {};\n        for (const i in uiSchema) {\n          if (i.startsWith('ui:') || i === 'classNames') {\n            newUiSchema[i] = uiSchema[i];\n          }\n        }\n        if (typeUpdated) delete newUiSchema['ui:widget'];\n        for (const i in node.uiSchema) {\n          if (!(i.startsWith('ui:') || i === 'classNames')) {\n            newUiSchema[i] = oldUiSchema[i];\n          }\n        }\n        if (isEmptyObject(newUiSchema)) {\n          delete newNode.uiSchema;\n        } else {\n          newNode.uiSchema = newUiSchema;\n        }\n      }\n      if (name && name !== newNode.name) {\n        if (tree.find((a) => a.name === name)) return tree;\n        updated = true;\n        newNode = updateNodeParentKeyAndName(newNode, null, name);\n      }\n      newTree.push(newNode);\n    } else {\n      if (node.children) {\n        const newChildren = _updateNodeByPath(node.children, tail, nodeUpdate);\n        if (newChildren === node.children) {\n          return tree;\n        }\n        updated = true;\n        let newNode = updateNodeByNewChildren(node, newChildren);\n        // update required\n        let newSchema = null;\n        if (\n          tail.length === 1 &&\n          nodeUpdate.name &&\n          (newSchema = newNode.schema) &&\n          newSchema.required &&\n          newSchema.required.includes(tail[0])\n        ) {\n          newNode.schema = Object.assign({}, newSchema, {\n            required: newSchema.required.map((a) => (a === tail[0] ? nodeUpdate.name : a)),\n          });\n        }\n        newTree.push(newNode);\n      } else {\n        return tree;\n      }\n    }\n  }\n  return updated ? newTree : tree;\n}\n\nfunction updateNodeByPath(tree, path, nodeUpdate) {\n  return _updateNodeByPath(tree, path, nodeUpdate);\n}\n\nfunction updateNode(tree, targetKey, nodeUpdate) {\n  return updateNodeByPath(tree, targetKey.split('.'), nodeUpdate);\n}\n\nvar SEPERATOR = '_';\nfunction getNodeByRjsfId(tree, rjsfId) {\n  for (const node of tree) {\n    if (node && node.name === rjsfId) {\n      return node;\n    }\n    if (rjsfId.startsWith(node.name) && rjsfId[node.name.length] === SEPERATOR) {\n      if (node.schema.type === 'array') {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const i = rjsfId.indexOf(SEPERATOR);\n        const index = i > 0 ? rjsfId.slice(0, i) : rjsfId;\n        if (isNaN(index)) return null;\n        const rest = i > 0 ? rjsfId.slice(i + 1) : null;\n        if (Array.isArray(node.schema.items)) {\n          if (+index < node.schema.items.length) {\n            let n = node.children.find((a) => a.name === '[items]');\n            n = n && n.children.find((a) => a.name === index);\n            return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n          } else {\n            let n = node.children.find((a) => a.name === 'additionalItems');\n            return rest ? n && getNodeByRjsfId(n.children, rest) : n;\n          }\n        } else {\n          let n = node.children.find((a) => a.name === 'items');\n          return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n        }\n      }\n\n      if (node.children) {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const n = getNodeByRjsfId(node.children, rjsfId);\n        if (n) return n;\n      }\n    }\n  }\n  return null;\n}\n\nexport {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n\nexport default {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n","import { schema2tree, schema2node, removeNode, addNode, moveNode, updateNode, getNodeByRjsfId } from './core';\nimport defaultSettings from './default/settings';\nimport defaultMenuSchema from './default/menu';\nimport undoable from 'redux-undo';\nimport { includeAction } from 'redux-undo';\nimport { combineReducers } from 'redux';\n\nconst defaultMenu = schema2node(['menu'], defaultMenuSchema.schema, defaultMenuSchema.uiSchema);\nconst DEFAULT_TREE_NAME = 'root';\n\nconst emptyTree = schema2tree(DEFAULT_TREE_NAME, { type: 'object', properties: {} });\n\nfunction tree(state = emptyTree, action) {\n  switch (action.type) {\n    case 'TREE_CLEAR':\n      return emptyTree;\n    case 'TREE_SET_TREE': {\n      const { name, schema, uiSchema } = action.payload;\n      return schema2tree(\n        name || (state[0] && state[0].name) || DEFAULT_TREE_NAME,\n        schema || state[0].schema,\n        uiSchema || state[0].uiSchema\n      );\n    }\n    case 'TREE_ADD_NODE': {\n      const { targetNodeKey, position, node2add } = action.payload;\n      return addNode(state, targetNodeKey, position, node2add);\n    }\n    case 'TREE_REMOVE_NODE':\n      const newState = removeNode(state, action.payload);\n      return newState.length ? newState : emptyTree;\n    case 'TREE_MOVE_NODE': {\n      const { source, target, position } = action.payload;\n      return moveNode(state, source, target, position);\n    }\n    case 'TREE_UPDATE_NODE': {\n      const { target, nodeUpdate } = action.payload;\n      const newState = updateNode(state, target, nodeUpdate);\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction activeNodeKey(state = null, action) {\n  switch (action.type) {\n    case 'ACTIVE_NODE_KEY_SET':\n      return action.payload || null;\n    case 'TREE_UPDATE_NODE':\n      const { target, nodeUpdate } = action.payload;\n      if (state === target && nodeUpdate.name) {\n        const path = state.split('.');\n        if (path[path.length - 1] !== nodeUpdate.name) {\n          return path.slice(0, -1).join('.') + '.' + nodeUpdate.name;\n        }\n      }\n      return state;\n    case 'TREE_SET_TREE':\n    case 'TREE_CLEAR':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction formData(state = {}, action) {\n  switch (action.type) {\n    case 'FORM_DATA_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction settings(state = defaultSettings, action) {\n  switch (action.type) {\n    case 'SETTINGS_UPDATE':\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction menu(state = defaultMenu, action) {\n  switch (action.type) {\n    case 'MENU_SET': {\n      const { schema, uiSchema } = action.payload;\n      return schema2node(['menu'], schema, uiSchema);\n    }\n    case 'MENU_DEFAULT': {\n      return defaultMenu;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction menuOpenKeys(state = [], action) {\n  switch (action.type) {\n    case 'MENU_OPEN_KEYS_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction removeUnnecessaryHistory(reducer) {\n  return (state, action) => {\n    let newState = reducer(state, action);\n    delete newState.history;\n    return newState;\n  };\n}\n\nvar reducer = combineReducers({\n  tree: removeUnnecessaryHistory(\n    undoable(tree, {\n      filter: includeAction([\n        'TREE_UPDATE_NODE',\n        'TREE_SET_TREE',\n        'TREE_CLEAR',\n        'TREE_ADD_NODE',\n        'TREE_REMOVE_NODE',\n        'TREE_MOVE_NODE',\n      ]),\n    })\n  ),\n  activeNodeKey,\n  settings,\n  menu,\n  formData,\n  menuOpenKeys,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case 'TREE_REMOVE_NODE_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'TREE_REMOVE_NODE',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'TREE_UPDATE_NODE_BY_RJSF_ID': {\n      const { rjsfId } = action.payload;\n      const target = getNodeByRjsfId(state.tree.present, rjsfId);\n      if (!target) return state;\n      action = {\n        type: 'TREE_UPDATE_NODE',\n        payload: { ...action.payload, target: target.key },\n      };\n      break;\n    }\n    default:\n      break;\n  }\n  return reducer(state, action);\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nvar persistConfig = {\n  key: 'react-jsonschema-formbuilder',\n  storage,\n  stateReconciler: hardSet,\n  throttle: 15,\n};\n\nvar { schema2tree } = require('./core');\n\nvar form = {\n  schema: {\n    title: 'A registration form',\n    description: 'A simple form example.',\n    type: 'object',\n    required: ['firstName', 'lastName'],\n    properties: {\n      firstName: {\n        type: 'string',\n        title: 'First name',\n      },\n      lastName: {\n        type: 'string',\n        title: 'Last name',\n      },\n      age: {\n        type: 'integer',\n        title: 'Age',\n        description: '(earthian year)',\n      },\n      bio: {\n        type: 'string',\n        title: 'Bio',\n      },\n      password: {\n        type: 'string',\n        title: 'Password',\n        minLength: 3,\n      },\n      telephone: {\n        type: 'string',\n        title: 'Telephone',\n        minLength: 10,\n      },\n    },\n  },\n  uiSchema: {\n    firstName: {\n      classNames: '',\n      'ui:emptyValue': '',\n    },\n    age: {\n      'ui:widget': 'updown',\n    },\n    bio: {\n      'ui:widget': 'textarea',\n    },\n    password: {\n      'ui:widget': 'password',\n      'ui:help': 'Hint: Make it strong!',\n    },\n    date: {\n      'ui:widget': 'alt-datetime',\n    },\n    telephone: {\n      'ui:options': {\n        inputType: 'tel',\n      },\n    },\n  },\n};\n\nvar initTree = schema2tree('root', form.schema, form.uiSchema);\n\nvar persistedReducer = persistReducer(persistConfig, reducer);\n\nvar store = createStore(persistedReducer, {\n  tree: {\n    past: [],\n    present: initTree,\n    future: [],\n  },\n});\n\nvar persistor = persistStore(store);\n\nexport { store, persistor };\nexport default { store, persistor };\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nexport default class InlineEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      value: this.props.value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ value: nextProps.value });\n  }\n\n  onChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n  onCompleteEditing = () => {\n    this.setState({ editing: false });\n    const newValue = this.state.value.trim();\n    if (newValue !== this.props.value) {\n      this.props.onChange && this.props.onChange(newValue);\n    }\n  };\n  onStartEditing = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ editing: true }, () => this.input && this.input.focus());\n  };\n\n  onCancelEditing = () => {\n    this.setState({\n      editing: false,\n      value: this.props.value,\n    });\n  };\n\n  renderEditing() {\n    return (\n      <Input\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        onKeyUp={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.keyCode === 13) {\n            this.onCompleteEditing();\n          } else if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n\n  renderView() {\n    return (\n      <span>\n        {this.props.children}\n        <EditOutlined onClick={this.onStartEditing} />\n      </span>\n    );\n  }\n\n  render() {\n    if (this.state.editing) {\n      return this.renderEditing();\n    } else {\n      return this.renderView();\n    }\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nconst { SubMenu, Item } = Menu;\n\nfunction nameGen(name, occupied) {\n  let n = 1;\n  let newName = name;\n  while (occupied && occupied.includes(newName)) {\n    newName = name + '_' + n;\n    n += 1;\n  }\n  return newName;\n}\n\nclass AddItemMenu extends React.Component {\n  onAddNode = (node2add) => {\n    const { addNode } = this.props;\n    const name = nameGen(\n      node2add.name,\n      this.props.node.children.map((a) => a.name)\n    );\n    addNode({ ...node2add, name });\n  };\n  render() {\n    const {\n      menu: { children: menuTree },\n      menuOpenKeys,\n      menuOpenChange,\n    } = this.props;\n    return (\n      <Menu mode=\"inline\" theme=\"dark\" openKeys={menuOpenKeys} onOpenChange={menuOpenChange}>\n        {menuTree.map((a) =>\n          a.schema && a.schema.type === 'object' && a.children && a.children.length ? (\n            <SubMenu key={a.key} title={a.schema.title || a.name}>\n              {a.children.map((b) => (\n                <Item key={b.key} onClick={() => this.onAddNode(b)}>\n                  {b.schema.title || b.name}\n                </Item>\n              ))}\n            </SubMenu>\n          ) : (\n            <Item key={a.key} onClick={() => this.onAddNode(a)}>\n              {a.schema.title || a.name}\n            </Item>\n          )\n        )}\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n  ({ menu, menuOpenKeys }) => ({ menu, menuOpenKeys }),\n  (dispatch, { node }) => ({\n    addNode: (node2add) =>\n      dispatch({\n        type: 'TREE_ADD_NODE',\n        payload: {\n          targetNodeKey: node.key,\n          position: 0,\n          node2add,\n        },\n      }),\n    menuOpenChange: (keys) =>\n      dispatch({\n        type: 'MENU_OPEN_KEYS_SET',\n        payload: keys,\n      }),\n  })\n)(AddItemMenu);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Popconfirm } from 'antd';\nimport { PlusCircleOutlined, CloseCircleFilled } from '@ant-design/icons';\nimport InlineEditor from '../InlineEditor';\nimport { Dropdown } from 'antd';\nimport AddItemMenu from './Menu';\n\nclass TreeNodeTitle extends PureComponent {\n  render() {\n    const { node, removeNode, updateNodeName, searchValue } = this.props;\n    const { name, key } = node;\n    const isLeaf = node.isLeaf;\n    const isRoot = node.name === node.key;\n    const isArray = node.schema.type === 'array';\n    const indexBefore = node.name.toLowerCase().indexOf(searchValue);\n    const indexAfter = indexBefore + searchValue.length;\n    return (\n      <span style={{ display: 'block' }}>\n        {searchValue && indexBefore >= 0 ? (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name.slice(0, indexBefore)}\n            <span style={{ color: '#f50' }}>{name.slice(indexBefore, indexAfter)}</span>\n            {name.slice(indexAfter)}\n          </InlineEditor>\n        ) : (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name}\n          </InlineEditor>\n        )}\n        <span className=\"pull-right\">\n          {!(isLeaf || isArray) ? (\n            <span className=\"form-builder-add-item-menu\" onClick={(e) => e.stopPropagation()}>\n              <Dropdown placement=\"bottomLeft\" trigger={['click']} overlay={<AddItemMenu node={node} />}>\n                <PlusCircleOutlined />\n              </Dropdown>\n            </span>\n          ) : null}\n          {!isRoot ? (\n            <span className=\"tree-node-delete\" onClick={(e) => e.stopPropagation()}>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={`Delete \"${key}\"?`}\n                onConfirm={() => removeNode(key)}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <CloseCircleFilled />\n              </Popconfirm>\n            </span>\n          ) : null}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  (dispatch) => ({\n    removeNode: (key) =>\n      dispatch({\n        type: 'TREE_REMOVE_NODE',\n        payload: key,\n      }),\n    updateNodeName: (key, name) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: { target: key, nodeUpdate: { name } },\n      }),\n  })\n)(TreeNodeTitle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tree, Input } from 'antd';\nimport TreeNodeTitle from './TreeNodeTitle';\nconst { TreeNode } = Tree;\nconst { Search } = Input;\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: ['root'],\n      searchValue: '',\n      searchExpanded: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeNodeKey && nextProps.activeNodeKey !== this.props.activeNodeKey) {\n      let path = nextProps.activeNodeKey.split('.');\n      let expandedKeys = [...this.state.expandedKeys];\n      const n = path.length;\n      for (var i = 1; i < n; i++) {\n        path[i] = path[i - 1] + '.' + path[i];\n        if (!expandedKeys.includes(path[i - 1])) {\n          expandedKeys.push(path[i - 1]);\n        }\n      }\n      this.setState({\n        expandedKeys,\n      });\n    }\n  }\n\n  onDrop = (info) => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    this.props.moveNode(dragKey, dropKey, dropPosition);\n  };\n\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n    });\n  };\n\n  onChange = (e) => {\n    const { expandedKeys } = this.state;\n    const searchValue = e.target.value.trim().toLowerCase();\n    if (!searchValue) {\n      this.setState({\n        searchValue,\n        searchExpanded: [],\n      });\n      return;\n    }\n\n    let newSearchExpanded = [];\n    const loop = (data) => {\n      if (!data) return;\n      for (const item of data) {\n        if (item.name.toLowerCase().includes(searchValue)) {\n          let parents = item.key.split('.');\n          const n = parents.length;\n          for (let i = 1; i < n; i++) {\n            if (!(expandedKeys.includes(parents[i - 1]) || newSearchExpanded.includes(parents[i - 1]))) {\n              newSearchExpanded.push(parents[i - 1]);\n            }\n            parents[i] = parents[i - 1] + '.' + parents[i];\n          }\n        }\n        loop(item.children);\n      }\n    };\n    loop(this.props.tree);\n    this.setState({\n      searchValue,\n      searchExpanded: newSearchExpanded,\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      expandedKeys: [...this.state.expandedKeys, ...this.state.searchExpanded],\n      searchExpanded: [],\n    });\n  };\n\n  render() {\n    const { tree, setActiveNode, activeNodeKey } = this.props;\n    const { searchValue, expandedKeys, searchExpanded } = this.state;\n    const loop = (data) =>\n      data.map((item) => {\n        if (item.children && item.children.length) {\n          return (\n            <TreeNode\n              key={item.key}\n              title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n              isLeaf={item.isLeaf}\n            >\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return (\n          <TreeNode\n            key={item.key}\n            title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n            isLeaf={item.isLeaf}\n          />\n        );\n      });\n    const children = loop(tree);\n    return (\n      <div>\n        <Search placeholder=\"Search\" onChange={this.onChange} onBlur={this.onBlur} />\n        <Tree\n          className=\"form-builder-draggable-tree\"\n          expandedKeys={searchExpanded.length ? [...expandedKeys, ...searchExpanded] : expandedKeys}\n          selectedKeys={[activeNodeKey]}\n          draggable\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n          onExpand={this.onExpand}\n          onSelect={([selected]) => setActiveNode(selected)}\n          blockNode\n        >\n          {children}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    tree: present,\n    activeNodeKey,\n  }),\n  (dispatch) => ({\n    moveNode: (source, target, position) =>\n      dispatch({\n        type: 'TREE_MOVE_NODE',\n        payload: {\n          source,\n          target,\n          position,\n        },\n      }),\n    removeNode: (target) =>\n      dispatch({\n        type: 'TREE_REMOVE_NODE',\n        payload: target,\n      }),\n    setActiveNode: (selectedKey) =>\n      dispatch({\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: selectedKey,\n      }),\n    updateNodeTitle: (target, name) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target: target,\n          node: { name },\n          updateMode: 1,\n        },\n      }),\n  })\n)(Demo);\n","import Tree from './Tree';\nexport default Tree;\n","import Form from 'react-jsonschema-form/lib';\nimport { getDefaultRegistry } from './utils';\n\nexport default class FormPatch extends Form {\n  getRegistry() {\n    const { fields, widgets } = getDefaultRegistry();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      widgets: { ...widgets, ...this.props.widgets },\n      ArrayFieldTemplate: this.props.ArrayFieldTemplate,\n      ObjectFieldTemplate: this.props.ObjectFieldTemplate,\n      FieldTemplate: this.props.FieldTemplate,\n      definitions: this.props.schema.definitions || {},\n      formContext: this.props.formContext || {},\n    };\n  }\n}\n","import React from 'react';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\nfunction Label(props) {\n  const { label, required, id } = props;\n  if (!label) {\n    // See #312: Ensure compatibility with old versions of React.\n    return <div />;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n\nexport function DefaultTemplate(props) {\n  const { id, classNames, label, children, errors, help, description, hidden, required, displayLabel } = props;\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <div className={classNames}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </div>\n  );\n}\n\nexport function DefaultObjectFieldTemplate(props) {\n  const { TitleField, DescriptionField } = props;\n  return (\n    <fieldset>\n      {(props.uiSchema['ui:title'] || props.title) && (\n        <TitleField\n          id={`${props.idSchema.$id}__title`}\n          title={props.title || props.uiSchema['ui:title']}\n          required={props.required}\n          formContext={props.formContext}\n        />\n      )}\n      {props.description && (\n        <DescriptionField\n          id={`${props.idSchema.$id}__description`}\n          description={props.description}\n          formContext={props.formContext}\n        />\n      )}\n      {props.properties.map((prop) => prop.content)}\n    </fieldset>\n  );\n}\n","import React from 'react';\nimport InlineEditor from '../InlineEditor';\nimport { connect } from 'react-redux';\nimport { Input, Popconfirm, Tooltip } from 'antd';\nimport { SelectOutlined, DeleteOutlined } from '@ant-design/icons';\nconst { getNodeByRjsfId } = require('../core');\nconst { TextArea } = Input;\n\nconst ACTIVE_STYLE = { backgroundColor: '#bae7ff' };\n\nclass ExtendedInlineEditor extends InlineEditor {\n  renderView() {\n    return (\n      <span className=\"fb-test\" onClick={this.onStartEditing}>\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nclass InlineTextAreaEditor extends ExtendedInlineEditor {\n  renderEditing() {\n    return (\n      <TextArea\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        autoSize\n        onKeyUp={(e) => {\n          if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst ButtonGroup = connect(null, (dispatch, { id }) => ({\n  select: () => dispatch({ type: 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID', payload: id }),\n  remove: () => dispatch({ type: 'TREE_REMOVE_NODE_BY_RJSF_ID', payload: id }),\n}))((props) => {\n  const { select, remove, id } = props;\n  return (\n    <Tooltip title={id} placement=\"right\">\n      <a href=\"#!\">\n        <SelectOutlined onClick={select} />\n      </a>\n      <Popconfirm title={`Remove ${id}?`} onConfirm={remove}>\n        <a href=\"#!\">\n          <DeleteOutlined />\n        </a>\n      </Popconfirm>\n    </Tooltip>\n  );\n});\n\nexport function fieldTemplateConnector(FieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { id }) => {\n      const n = getNodeByRjsfId(present, id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { id, schema, uiSchema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n      updateHelp: (help) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: id, nodeUpdate: { uiSchema: { ...uiSchema, 'ui:help': help } } },\n        }),\n    })\n  )((props) => {\n    const {\n      id,\n      label,\n      description,\n      help,\n      schema,\n      updateTitle,\n      updateDescription,\n      updateHelp,\n      active,\n      classNames,\n      isInlineMode,\n    } = props;\n    if (!isInlineMode) return <FieldTemplate {...props} />;\n    const labelElement = label && (\n      <ExtendedInlineEditor value={label} onChange={updateTitle}>\n        {label}\n      </ExtendedInlineEditor>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description.props.description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n    const helpElement = help && (\n      <ExtendedInlineEditor value={help.props.help} onChange={updateHelp}>\n        {help}\n      </ExtendedInlineEditor>\n    );\n    return (\n      <div className={classNames} style={active ? ACTIVE_STYLE : null}>\n        {['object', 'array'].includes(schema.type) ? null : (\n          <div className=\"pull-right\">\n            {' '}\n            <ButtonGroup id={id} />{' '}\n          </div>\n        )}\n        <FieldTemplate\n          _label={label}\n          _description={description}\n          _help={help}\n          {...props}\n          classNames={null}\n          label={labelElement}\n          description={descriptionElement}\n          help={helpElement}\n        />\n      </div>\n    );\n  });\n}\n\nexport function objectFieldTemplateConnector(ObjectFieldTemplate) {\n  return connect(\n    ({ tree: { present }, activeNodeKey, settings: { isInlineMode } }, { idSchema }) => {\n      const n = idSchema && idSchema.$id && getNodeByRjsfId(present, idSchema.$id);\n      const active = n && n.key === activeNodeKey;\n      return { tree: present, active, isInlineMode };\n    },\n    (dispatch, { idSchema, schema }) => ({\n      updateTitle: (title) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, title } } },\n        }),\n      updateDescription: (description) =>\n        dispatch({\n          type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n          payload: { rjsfId: idSchema.$id, nodeUpdate: { schema: { ...schema, description } } },\n        }),\n    })\n  )((props) => {\n    const { idSchema, title, description, updateTitle, updateDescription, active, isInlineMode } = props;\n    if (!isInlineMode) return <ObjectFieldTemplate {...props} />;\n    const titleElement = title && (\n      <span>\n        <ExtendedInlineEditor value={title} onChange={updateTitle}>\n          {title}\n        </ExtendedInlineEditor>\n        <span className=\"pull-right\">\n          {' '}\n          <ButtonGroup id={idSchema.$id} />{' '}\n        </span>\n      </span>\n    );\n    const descriptionElement = description && (\n      <InlineTextAreaEditor value={description} onChange={updateDescription}>\n        {description}\n      </InlineTextAreaEditor>\n    );\n\n    return (\n      <div style={active ? ACTIVE_STYLE : null}>\n        <ObjectFieldTemplate\n          _title={title}\n          _description={description}\n          {...props}\n          title={titleElement}\n          description={descriptionElement}\n        />\n      </div>\n    );\n  });\n}\n","import { DefaultTemplate, DefaultObjectFieldTemplate } from './Template';\nimport { fieldTemplateConnector, objectFieldTemplateConnector } from './connectors';\n\nexport const FieldTemplate = fieldTemplateConnector(DefaultTemplate);\nexport const ObjectFieldTemplate = objectFieldTemplateConnector(DefaultObjectFieldTemplate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../rjsf-patch/Form';\nimport { FieldTemplate, ObjectFieldTemplate } from '../Template';\n\nclass FormView extends React.Component {\n  render() {\n    if (!this.props.schema) {\n      return null;\n    }\n    const { name, schema, uiSchema, formData, setFormData, liveValidate } = this.props;\n    return (\n      <Form\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        liveValidate={liveValidate}\n        FieldTemplate={FieldTemplate}\n        ObjectFieldTemplate={ObjectFieldTemplate}\n        idPrefix={name}\n        onChange={setFormData}\n      />\n    );\n  }\n}\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ name, schema, uiSchema }],\n    },\n    formData,\n    settings: { isLiveValidate },\n  }) => ({\n    name,\n    schema,\n    uiSchema,\n    formData,\n    liveValidate: isLiveValidate,\n  }),\n  (dispatch) => ({\n    setFormData: ({ formData }) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n  })\n)(FormView);\n","import React from 'react';\nimport { Input, Alert } from 'antd';\nconst { TextArea } = Input;\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B'a keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class JsonEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      string: JSON.stringify(value, null, 2),\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps.value, this.state.value)) {\n      this.setState({\n        value: nextProps.value,\n        string: JSON.stringify(nextProps.value, null, 2),\n        error: null,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.string !== this.state.string;\n  }\n\n  onChange = (e) => {\n    const value = e.target.value;\n    try {\n      const obj = value ? JSON.parse(value) : null;\n      this.setState(\n        {\n          value: obj,\n          string: value,\n          error: null,\n        },\n        () => this.props.onChange(obj)\n      );\n    } catch (error) {\n      this.setState({\n        string: value,\n        error,\n      });\n    }\n  };\n\n  renderErrorMessage() {\n    const { error } = this.state;\n    if (!error) return null;\n    const errorMessage = error.toString();\n    const message = (\n      <a\n        href=\"#!\"\n        onClick={() => {\n          const matched = /position ([0-9]+)/.exec(errorMessage);\n          const position = matched ? matched[1] : -1;\n          const input = this.input.textAreaRef;\n          input.selectionStart = position;\n          input.selectionEnd = position;\n          input.focus();\n        }}\n      >\n        {error.toString()}\n      </a>\n    );\n    return <Alert message={message} type=\"error\" showIcon />;\n  }\n\n  onClickPrettify = () => {\n    let { error } = this.state;\n    if (!error) {\n      this.setState({\n        string: JSON.stringify(this.props.value, null, 2),\n      });\n    }\n  };\n\n  render() {\n    const { string } = this.state;\n    return (\n      <div>\n        {this.renderErrorMessage() || (\n          <Alert\n            message={\n              <a href=\"#!\" onClick={this.onClickPrettify}>\n                Prettify\n              </a>\n            }\n            type=\"success\"\n            showIcon\n          />\n        )}\n        <TextArea {...this.props} ref={(ref) => (this.input = ref)} value={string} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ schema }],\n    },\n  }) => ({ schema }),\n  (dispatch) => ({\n    setTree: (schema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          schema,\n        },\n      }),\n  })\n)(({ schema, setTree }) => <JsonEditor value={schema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ uiSchema }],\n    },\n  }) => ({ uiSchema }),\n  (dispatch) => ({\n    setTree: (uiSchema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          uiSchema,\n        },\n      }),\n  })\n)(({ uiSchema, setTree }) => <JsonEditor value={uiSchema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport JsonEditor from '../JsonEditor';\n\nfunction name2title(name) {\n  if (!name) return name;\n  const words = name.indexOf('_') >= 0 ? name.split('_') : name.split(/(?=[A-Z])/);\n  return words.map((a) => a.charAt(0).toUpperCase() + a.slice(1)).join(' ');\n}\n\nfunction json2schema(data, name) {\n  const title = name ? name2title(name) : undefined;\n  if (typeof data === 'number') {\n    return {\n      type: Number.isInteger(data) ? 'integer' : 'number',\n      title,\n    };\n  }\n  if (typeof data === 'string') {\n    return {\n      type: 'string',\n      title,\n    };\n  }\n  if (typeof data === 'boolean') {\n    return {\n      type: 'boolean',\n      title,\n    };\n  }\n  if (typeof data === 'object') {\n    if (Array.isArray(data)) {\n      return {\n        type: 'array',\n        title,\n        items: json2schema(data[0]),\n      };\n    }\n    let properties = {};\n    for (const i in data) {\n      const s = json2schema(data[i], i);\n      if (s) {\n        properties[i] = s;\n      }\n    }\n    return {\n      type: 'object',\n      title,\n      properties,\n    };\n  }\n  return undefined;\n}\n\nexport default connect(\n  ({ formData }) => ({ formData }),\n  (dispatch) => ({\n    setFormData: (formData) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n    genForm: (formData) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'root',\n          schema: json2schema(formData, 'form'),\n          uiSchema: {},\n        },\n      }),\n  })\n)(({ formData, setFormData, genForm }) => (\n  <div>\n    <JsonEditor value={formData} onChange={(value) => setFormData(value)} autoSize />\n    <Button type=\"primary\" onClick={() => genForm(formData)}>\n      Gen Form\n    </Button>\n    <Button onClick={() => setFormData({})}>Clear</Button>\n  </div>\n));\n","import React from 'react';\nimport JsonEditor from '../JsonEditor';\nimport { Input } from 'antd';\n\nexport default class NodeJsonEditor extends React.Component {\n  static get key() {\n    return 'json-editor';\n  }\n  static get name() {\n    return 'Json';\n  }\n  static filter(node) {\n    return true;\n  }\n\n  constructor(props) {\n    super(props);\n    const { schema, uiSchema } = props;\n    this.state = {\n      schemaJsonString: JSON.stringify(schema, null, 2),\n      uiSchemaJsonString: JSON.stringify(schema, null, 2),\n      schema,\n      uiSchema,\n    };\n  }\n\n  render() {\n    const { node, updateNode } = this.props;\n    const { schema, uiSchema } = node;\n    const { properties, items, additionalItems, ...rschema } = schema;\n    return (\n      <div>\n        <Input value={node.name} onChange={(e) => updateNode({ name: e.target.value })} />\n        <JsonEditor value={rschema} onChange={(schema) => updateNode({ schema })} autoSize />\n        <JsonEditor value={uiSchema} onChange={(uiSchema) => updateNode({ uiSchema })} autoSize />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, InputNumber, Select, Row, Col, Button, List, Dropdown, Menu, Switch, Slider } from 'antd';\nimport { EditOutlined, CaretDownOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport lodash from 'lodash';\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport function _FormItemTemplate({ title, children }) {\n  return (\n    <Row className=\"ant-form-item\">\n      <Col className=\"ant-form-item-label\">\n        <label>{title}</label>\n      </Col>\n      <Col className=\"ant-form-item-control-wrapper\">{children}</Col>\n    </Row>\n  );\n}\n\nexport function FormItemTemplate({ title, children, remove }) {\n  return (\n    <List.Item\n      actions={\n        remove ? [<Button onClick={remove} size=\"small\" type=\"danger\" shape=\"circle\" icon={<CloseOutlined />} />] : null\n      }\n    >\n      <List.Item.Meta title={title} description={children} />\n    </List.Item>\n  );\n}\n\nclass TimeThrottle extends React.Component {\n  throttle = 1000;\n  editing = <EditOutlined />;\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n      value: props.value,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n      this.setState({ timer: null });\n      this.onSubmitValue(this.state.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      value: value,\n      timer: setTimeout(() => {\n        this.setState({ timer: null });\n        this.onSubmitValue(this.state.value);\n      }, this.throttle),\n    });\n  };\n\n  onSubmitValue(value) {\n    this.props.onChange(value);\n  }\n\n  onBlur = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(this.state.value);\n  };\n\n  onRemove = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(undefined);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nclass TimeThrottleInput extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    return (\n      <FormItemTemplate\n        title={\n          <span>\n            {title}\n            {this.state.timer ? this.editing : null}\n          </span>\n        }\n        remove={this.onRemove}\n      >\n        <Input\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleTextArea extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {this.state.timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <TextArea\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleRange extends TimeThrottle {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value[0] !== this.state.value[0] || nextProps.value[1] !== this.state.value[1]) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n  onSubmitValue(value) {\n    if (!value) {\n      this.props.onChange(value);\n    }\n    let [min, max] = value;\n    if (typeof min === 'string') {\n      if (min) {\n        min = this.props.value[0];\n      } else {\n        min = undefined;\n      }\n    }\n    if (typeof max === 'string') {\n      if (max) {\n        max = this.props.value[1];\n      } else {\n        max = undefined;\n      }\n    }\n    this.props.onChange([min, max]);\n  }\n  render() {\n    const {\n      value: [min, max],\n      timer,\n    } = this.state;\n    const { title } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([typeof n === 'string' && !n ? undefined : n, max]);\n          }}\n          value={min === 0 && max === undefined ? '' : min}\n          style={{ width: 100, textAlign: 'center' }}\n          placeholder=\"Minimum\"\n        />\n        <Input\n          style={{ width: 30, borderLeft: 0, pointerEvents: 'none', backgroundColor: '#fff' }}\n          placeholder=\"~\"\n          disabled\n        />\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([min, typeof n === 'string' && !n ? undefined : n]);\n          }}\n          value={max}\n          style={{ width: 100, textAlign: 'center', borderLeft: 0 }}\n          placeholder=\"Maximum\"\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nconst widgetMap = {\n  boolean: {\n    checkbox: 'CheckboxWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    hidden: 'HiddenWidget',\n  },\n  string: {\n    text: 'TextWidget',\n    password: 'PasswordWidget',\n    // email: \"EmailWidget\",\n    // hostname: \"TextWidget\",\n    // ipv4: \"TextWidget\",\n    // ipv6: \"TextWidget\",\n    uri: 'URLWidget',\n    'data-url': 'FileWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    textarea: 'TextareaWidget',\n    hidden: 'HiddenWidget',\n    date: 'DateWidget',\n    datetime: 'DateTimeWidget',\n    // \"date-time\": \"DateTimeWidget\",\n    'alt-date': 'AltDateWidget',\n    'alt-datetime': 'AltDateTimeWidget',\n    color: 'ColorWidget',\n    file: 'FileWidget',\n  },\n  number: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  integer: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  array: {\n    select: 'SelectWidget',\n    checkboxes: 'CheckboxesWidget',\n    files: 'FileWidget',\n  },\n};\n\nconst widgets = lodash(widgetMap)\n  .toPairs()\n  .flatMap(([type, widgets]) =>\n    lodash(widgets)\n      .toPairs()\n      .map(([widget]) => [widget, type])\n      .value()\n  )\n  .groupBy('0')\n  .toPairs()\n  .map(([widget, types]) => [widget, types.map((a) => a[1])])\n  .map(([widget, types]) => [\n    types.length > 1 ? ({ type }) => types.includes(type) : ((t) => ({ type }) => type === t)(types[0]),\n    widget,\n  ])\n  .map(([filter, widget]) => {\n    switch (widget) {\n      case 'select':\n      case 'radio':\n        return [(schema, uiSchema) => schema.enum && filter(schema, uiSchema), widget];\n\n      default:\n        return [filter, widget];\n    }\n  })\n  .value();\n\nfunction type({ node: { schema }, updateSchema: update }) {\n  const key = 'type';\n  const title = 'Type';\n  const availableTypes = ['string', 'number', 'integer', 'boolean'];\n  if (!availableTypes.includes(schema.type)) return [];\n  const value = (schema || {})[key];\n  return [\n    null,\n    <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n      <Select onChange={(value) => update({ [key]: value })} value={value} style={{ width: '100%' }}>\n        {availableTypes.map((key) => (\n          <Option key={key}>{key}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nfunction title({ node: { schema }, updateSchema: update }) {\n  const key = 'title';\n  const title = 'Title';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction description({ node: { schema }, updateSchema: update }) {\n  const key = 'description';\n  const title = 'Description';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleTextArea\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n        autoSize\n      />,\n    ];\n  }\n}\n\nclass ClassNamesEditor extends React.Component {\n  colSizes = ['sm', 'md', 'lg', 'xl'];\n  style = { width: '100%' };\n\n  constructor(props) {\n    super(props);\n    const value = [...new Set(this.props.value.split(' ').filter((a) => a))];\n\n    const cols = this.extractCol(value);\n    this.state = {\n      col: cols.length ? cols[0][0] : 'md',\n      value: value,\n      options: value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      const value = nextProps.value.split(' ').filter((a) => a);\n      const { options } = this.state;\n      const newOptions = value.filter((a) => !options.includes(a));\n      this.setState({\n        value,\n        options: newOptions, //[...options, ...newOptions]\n      });\n    }\n  }\n\n  extractCol(classNames) {\n    return classNames\n      .filter((a) => a.startsWith('col-'))\n      .map((a) => a.split('-'))\n      .filter((a) => a.length === 3 && Number.isInteger(+a[2]) && this.colSizes.includes(a[1]))\n      .map(([a, b, c]) => [b, +c]);\n  }\n\n  renderMenu() {\n    return (\n      <Menu onClick={({ key }) => this.setState({ col: key })}>\n        {this.colSizes.map((a) => (\n          <Menu.Item key={a}>col-{a}-</Menu.Item>\n        ))}\n      </Menu>\n    );\n  }\n\n  sliderValue() {\n    const { value, col } = this.state;\n    return (this.extractCol(value).find((a) => a[0] === col) || [0, 0])[1];\n  }\n\n  onSliderChange = (value) => {\n    const { value: classNames, col } = this.state;\n\n    let found = false;\n    let newClassNames = classNames\n      .map((a) => {\n        let [perfix, b, v] = a.split('-');\n        if (perfix === 'col' && b === col && Number.isInteger(+v)) {\n          found = true;\n          return value ? `col-${b}-${value}` : '';\n        }\n        return a;\n      })\n      .filter((a) => a);\n    if (!found && value) {\n      newClassNames.push(`col-${col}-${value}`);\n    }\n    this.props.onChange(newClassNames.join(' '));\n  };\n\n  render() {\n    const { title, ...rest } = this.props;\n    const { options, value, col } = this.state;\n    return (\n      <FormItemTemplate title={title} remove={() => this.props.onChange(undefined)}>\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={4}>\n            <Dropdown overlay={this.renderMenu()}>\n              <a>\n                {col} <CaretDownOutlined />\n              </a>\n            </Dropdown>\n          </Col>\n          <Col xs={20}>\n            <Slider min={0} max={12} value={this.sliderValue()} onChange={this.onSliderChange} />\n          </Col>\n        </Row>\n        <Select\n          style={this.style}\n          mode=\"tags\"\n          tokenSeparators={[' ']}\n          {...rest}\n          value={value}\n          onChange={(value) => this.props.onChange(value.join(' '))}\n          onBlur={this.onBlur}\n        >\n          {options.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>\n    );\n  }\n}\n\nfunction classNames({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'classNames';\n  const title = 'Class Names';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <ClassNamesEditor key={key} title={title} value={value} onChange={(value) => update({ classNames: value })} />,\n    ];\n  }\n}\n\nfunction placeholder({ node: { schema, uiSchema }, updateUiOptions: update }) {\n  if (schema.type === 'object' || schema.type === 'array') {\n    return [];\n  }\n  const key = 'placeholder';\n  const title = 'Placeholder';\n  const uiOptions = (uiSchema || {})['ui:options'];\n  const value = (uiOptions || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction help({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:help';\n  const title = 'Help';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction widget({ node: { schema, uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:widget';\n  const title = 'Widget';\n  const availableWidgets = widgets.filter(([f]) => f(schema || {}, uiSchema || {}));\n  if (!availableWidgets.length) return [];\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          onChange={(value) => update({ [key]: value || null })}\n          value={value}\n          style={{ width: '100%' }}\n          showSearch\n        >\n          {availableWidgets.map(([_, key]) => (\n            <Option key={key}>{key}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\nfunction pattern({ node: { schema }, updateSchema: update }) {\n  if (schema.type !== 'string') return [];\n  const key = 'pattern';\n  const title = 'Pattern';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction required({ node: { schema }, updateSchema: update }) {\n  const key = 'required';\n  const title = 'Required';\n  if (schema.type !== 'object') return [];\n  if (!schema.required) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <FormItemTemplate key={key} title=\"Required\" remove={() => update({ [key]: undefined })}>\n      <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        onChange={(required) => update({ required })}\n        value={schema.required}\n      >\n        {Object.keys(schema.properties || {}).map((a) => (\n          <Option key={a}>{a}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nconst rangeMeta = (match, key, title, minp, maxp) => ({ node: { schema }, updateSchema: update }) => {\n  if (!match(schema)) return [];\n  if (schema[minp] === undefined && schema[maxp] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [minp]: 0 })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <TimeThrottleRange\n      key={key}\n      title={title}\n      value={[schema[minp], schema[maxp]]}\n      onChange={(value) => {\n        if (!value) {\n          update({ [minp]: undefined, [maxp]: undefined });\n        } else {\n          const [min, max] = value;\n          update({\n            [minp]: min ? min : max === undefined ? 0 : undefined,\n            [maxp]: max,\n          });\n        }\n      }}\n    />,\n  ];\n};\nconst length = rangeMeta((a) => a.type === 'string', 'length', 'Length', 'minLength', 'maxLength');\nconst range = rangeMeta((a) => a.type === 'number' || a.type === 'integer', 'range', 'Range', 'minimum', 'maximum');\nconst itemRange = rangeMeta((a) => a.type === 'array', 'itemRange', 'Item Range', 'minItems', 'maxItems');\n\nfunction uniqueItems({ node: { schema }, updateSchema: update }) {\n  const key = 'uniqueItems';\n  const title = 'Unique Items';\n  if (schema.type !== 'array') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: true })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <List.Item\n        actions={[\n          <Button onClick={() => update({ [key]: undefined })} size=\"small\" type=\"danger\" icon={<CloseOutlined />} />,\n        ]}\n      >\n        <List.Item.Meta title={title} />\n        <Switch defaultChecked onChange={(value) => update({ [key]: value })} />\n      </List.Item>,\n    ];\n  }\n}\n\nconst [enumKey, enumName] = [['enum', 'Enum'], ['enumNames', 'Enum Names']].map(\n  ([key, title]) => ({ node: { schema }, updateSchema: update }) => {\n    if (schema.type !== 'string') return [];\n    if (schema[key] === undefined) {\n      return [\n        <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n          {title}\n        </Menu.Item>,\n      ];\n    } else {\n      return [\n        null,\n        <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n          <Select\n            mode=\"tags\"\n            style={{ width: '100%' }}\n            onChange={(values) => update({ [key]: values })}\n            value={schema[key]}\n          >\n            {schema[key].map((a) => (\n              <Select.Option key={a}>{a}</Select.Option>\n            ))}\n          </Select>\n        </FormItemTemplate>,\n      ];\n    }\n  }\n);\n\nconst formatOptions = ['date-time', 'email', 'hostname', 'ipv4', 'ipv6', 'uri'];\nfunction format({ node: { schema }, updateSchema: update }) {\n  const key = 'format';\n  const title = 'Format';\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select style={{ width: '100%' }} onChange={(value) => update({ [key]: value })} value={schema[key]}>\n          {formatOptions.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\n\nexport default class BasicEditor extends React.Component {\n  static get key() {\n    return 'basic-editor';\n  }\n\n  static get name() {\n    return 'Basic';\n  }\n\n  static filter(node) {\n    return node.schema;\n  }\n\n  name() {\n    return null;\n  }\n\n  render() {\n    const l = [\n      type,\n      title,\n      description,\n      required,\n      widget,\n      classNames,\n      help,\n      placeholder,\n      enumKey,\n      enumName,\n      pattern,\n      length,\n      range,\n      itemRange,\n      uniqueItems,\n      format,\n    ].map((f) => f(this.props));\n\n    const addable = l.map((a) => a[0]).filter((a) => a);\n    const editable = l.map((a) => a[1]).filter((a) => a);\n\n    if (addable.length) {\n      editable.push(\n        <List.Item key=\"addButton\">\n          <Dropdown trigger={['click']} overlay={<Menu>{addable}</Menu>}>\n            <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />} />\n          </Dropdown>\n        </List.Item>\n      );\n    }\n\n    return <List itemLayout=\"horizontal\" dataSource={editable} renderItem={(a) => a} />;\n  }\n\n  _render() {\n    return (\n      <form className=\"ant-form ant-form-horizontal\">\n        {this.name()}\n        <fieldset>\n          <legend>Schema</legend>\n          {this.title()}\n          {this.description()}\n        </fieldset>\n        <fieldset>\n          <legend>uiSchema</legend>\n          {this.widgets()}\n          {this.classNames()}\n          {this.help()}\n        </fieldset>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs } from 'antd';\nimport JsonEditor from './JsonEditor';\nimport BasicEditor from './BasicEditor';\n\nconst { getNode } = require('../core');\nconst { TabPane } = Tabs;\n\nconst editorList = [BasicEditor, JsonEditor];\n\nclass Editor extends React.Component {\n  updateUiOptions = (uiOptionsUpdate) => {\n    const { uiSchema = {}, key } = this.props.node;\n    const uiOptions = uiSchema['ui:options'] || {};\n    const newUiOptions = { ...uiOptions, ...uiOptionsUpdate };\n    for (const i in newUiOptions) {\n      if (newUiOptions[i] !== undefined) {\n        this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': { ...uiOptions, ...newUiOptions } } });\n        return;\n      }\n    }\n    this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': undefined } });\n  };\n\n  render() {\n    const { node, updateNode } = this.props;\n    if (!(node && node.schema)) return null;\n    const filteredEditors = editorList.filter((a) => a.filter(node));\n    return (\n      <Tabs defaultActiveKey={filteredEditors[0].key} type=\"card\">\n        {filteredEditors.map((Editor) => (\n          <TabPane tab={Editor.name} key={Editor.key}>\n            <div style={{ margin: '0px 16px' }}>\n              <Editor\n                key={node.key}\n                node={node}\n                updateNode={(nodeUpdate) => updateNode(node.key, nodeUpdate)}\n                updateSchema={(schemaUpdate) => updateNode(node.key, { schema: { ...node.schema, ...schemaUpdate } })}\n                updateUiSchema={(uiSchemaUpdate) =>\n                  updateNode(node.key, { uiSchema: { ...node.uiSchema, ...uiSchemaUpdate } })\n                }\n                updateUiOptions={this.updateUiOptions}\n              />\n            </div>\n          </TabPane>\n        ))}\n      </Tabs>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    node: activeNodeKey && getNode(present, activeNodeKey),\n  }),\n  (dispatch) => ({\n    updateNode: (target, nodeUpdate) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target,\n          nodeUpdate,\n        },\n      }),\n  })\n)(Editor);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Tooltip, message, Select } from 'antd';\nimport { FileAddOutlined, FolderOpenOutlined, SaveOutlined, UndoOutlined, RedoOutlined } from '@ant-design/icons';\n\nimport { ActionTypes } from 'redux-undo';\n\nfunction write(filename, json) {\n  const a = window.document.createElement('a');\n  a.href = window.URL.createObjectURL(new Blob([JSON.stringify(json, null, 2)], { type: 'application/json' }));\n  a.download = `${filename}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\nfunction read(e) {\n  var file = e.target.files[0];\n  if (!file) {\n    return;\n  }\n  var reader = new FileReader();\n\n  const p = new Promise(function (resolve) {\n    reader.onload = function (e) {\n      var contents = e.target.result;\n      resolve(contents);\n    };\n  });\n  reader.readAsText(file);\n  return p;\n}\n\nconst buttonStyle = { marginLeft: 8 };\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  save = () => {\n    const { name, schema, uiSchema } = this.props.tree.present[0];\n    write(name, { name, schema, uiSchema });\n  };\n  open = async (e) => {\n    const s = await read(e);\n    try {\n      const { name, schema, uiSchema } = JSON.parse(s);\n      this.props.setTree({ name, schema, uiSchema });\n    } catch (e) {\n      message.error('Invalid json file!');\n    }\n  };\n  render() {\n    const { tree, undo, redo, settings, updateSettings, newForm } = this.props;\n    const { past, future } = tree;\n    return (\n      <span>\n        <input ref={(ref) => (this.loadFile = ref)} type=\"file\" accept=\"application/json\" onChange={this.open} hidden />\n        <Tooltip title=\"New\">\n          <Button style={buttonStyle} onClick={newForm} icon={<FileAddOutlined />} />\n        </Tooltip>\n        <Tooltip title=\"Open\">\n          <Button\n            style={buttonStyle}\n            onClick={() => this.loadFile && this.loadFile.click()}\n            icon={<FolderOpenOutlined />}\n          />\n        </Tooltip>\n        <Tooltip title=\"Save\">\n          <Button style={buttonStyle} onClick={this.save} icon={<SaveOutlined />} />\n        </Tooltip>\n        <Tooltip title=\"Undo\">\n          <Button style={buttonStyle} onClick={undo} disabled={!past.length} icon={<UndoOutlined />} />\n        </Tooltip>\n        <Tooltip title=\"Redo\">\n          <Button style={buttonStyle} onClick={redo} disabled={!future.length} icon={<RedoOutlined />} />\n        </Tooltip>\n        <Select\n          mode=\"multiple\"\n          style={{ width: 290, marginLeft: 12 }}\n          value={settings.subViews}\n          onChange={updateSettings}\n          placeholder=\"Select sub views...\"\n        >\n          <Select.Option key=\"schema\">Schema</Select.Option>\n          <Select.Option key=\"uiSchema\">Ui Schema</Select.Option>\n          <Select.Option key=\"formData\">Data</Select.Option>\n        </Select>\n      </span>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree, settings }) => ({ tree, settings }),\n  (dispatch) => ({\n    newForm: () =>\n      dispatch({\n        type: 'TREE_CLEAR',\n      }),\n    setTree: (payload) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload,\n      }),\n    undo: () => dispatch({ type: ActionTypes.UNDO }),\n    redo: () => dispatch({ type: ActionTypes.REDO }),\n    updateSettings: (subViews) =>\n      dispatch({\n        type: 'SETTINGS_UPDATE',\n        payload: { subViews },\n      }),\n  })\n)(Toolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Slider, Switch, Button, List, Modal } from 'antd';\nconst { confirm } = Modal;\n\nconst tipFormatter = ((flag = false) => (number) => {\n  flag = !flag;\n  return flag ? number : window.innerWidth - number;\n})();\n\nclass Settings extends React.Component {\n  siderWidth() {\n    const { leftSiderWidth, rightSiderWidth } = this.props.settings;\n    return {\n      key: 'sider-width',\n      title: 'Sider Width',\n      description: (\n        <Slider\n          included\n          min={0}\n          max={window.innerWidth}\n          tipFormatter={tipFormatter}\n          range\n          value={[leftSiderWidth, window.innerWidth - rightSiderWidth]}\n          onChange={([left, right]) => {\n            this.props.updateSettings({\n              leftSiderWidth: left > 200 ? left : 200,\n              rightSiderWidth: window.innerWidth - right,\n            });\n          }}\n        />\n      ),\n    };\n  }\n\n  formWidth() {\n    return {\n      key: 'form-item',\n      title: 'Form Width',\n      description: (\n        <Slider\n          min={0}\n          max={window.innerWidth}\n          value={this.props.settings.formWidth}\n          onChange={(value) => {\n            this.props.updateSettings({\n              formWidth: value,\n            });\n          }}\n        />\n      ),\n    };\n  }\n\n  inlineMode() {\n    return {\n      key: 'inline-mode',\n      title: 'Inline Mode',\n      actions: [\n        <Switch\n          onChange={(v) => this.props.updateSettings({ isInlineMode: v })}\n          checked={this.props.settings.isInlineMode}\n        />,\n      ],\n    };\n  }\n\n  liveValidate() {\n    return {\n      key: 'live-validate',\n      title: 'Live Validate',\n      actions: [\n        <Switch\n          onChange={(v) => this.props.updateSettings({ isLiveValidate: v })}\n          checked={this.props.settings.isLiveValidate}\n        />,\n      ],\n    };\n  }\n\n  menu() {\n    const { setTree, rootNode, setMenu, menu } = this.props;\n    return {\n      key: 'menu',\n      title: 'Menu',\n      description: [\n        <Button key=\"edit\" onClick={() => setTree(menu)}>\n          Customize\n        </Button>,\n        <Button key=\"set\" onClick={() => setMenu(rootNode)}>\n          Apply Change\n        </Button>,\n      ],\n    };\n  }\n\n  reset() {\n    return {\n      key: 'reset',\n      description: (\n        <Button\n          type=\"danger\"\n          sytle={{ width: '100%' }}\n          key=\"edit\"\n          onClick={() => {\n            confirm({\n              title: 'Reset Form Buiilder?',\n              content: 'Removing persistent data from local storage.\\n All settings and unsaved form will be lost.',\n              okText: 'Continue',\n              okType: 'danger',\n              closable: true,\n              maskClosable: true,\n              onOk() {\n                window.localStorage.removeItem('persist:react-jsonschema-formbuilder');\n                window.location.reload();\n              },\n            });\n          }}\n        >\n          Reset Form Builder\n        </Button>\n      ),\n    };\n  }\n\n  listItems() {\n    return [this.siderWidth(), this.formWidth(), this.inlineMode(), this.liveValidate(), this.menu(), this.reset()];\n  }\n\n  renderItem(a) {\n    const {\n      Item,\n      Item: { Meta },\n    } = List;\n    return (\n      <Item key={a.key} actions={a.actions}>\n        <Meta title={a.title} description={a.description} />\n      </Item>\n    );\n  }\n\n  render() {\n    return <List itemLayout=\"horizontal\" dataSource={this.listItems()} renderItem={this.renderItem} />;\n  }\n}\n\nexport default connect(\n  ({\n    settings,\n    tree: {\n      present: [rootNode],\n    },\n    menu,\n  }) => ({ settings, rootNode, menu }),\n  (dispatch) => ({\n    updateSettings: (payload) =>\n      dispatch({\n        type: 'SETTINGS_UPDATE',\n        payload,\n      }),\n    setTree: ({ schema, uiSchema }) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'menu',\n          schema,\n          uiSchema,\n        },\n      }),\n    setMenu: ({ schema, uiSchema }) =>\n      dispatch({\n        type: 'MENU_SET',\n        payload: {\n          schema,\n          uiSchema,\n        },\n      }),\n  })\n)(Settings);\n","import React, { Component } from 'react';\nimport { Provider, connect } from 'react-redux';\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './css';\nimport { Layout, Tabs, Card } from 'antd';\nimport Tree from './Tree';\nimport { FormView, SchemaView, UiSchemaView, FormDataView } from './views';\nimport NodeEditor from './Editor';\nimport Toolbar from './Toolbar';\nimport Settings from './Settings';\nconst { Header, Sider, Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n  };\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  render() {\n    const { settings } = this.props;\n    return (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n          width={settings.leftSiderWidth}\n          style={{\n            background: '#fff',\n            padding: 0,\n            overflow: 'auto',\n            boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n          }}\n        >\n          <Tabs defaultActiveKey=\"0\" size=\"small\" type=\"card\">\n            <TabPane tab=\"Editor\" style={{ padding: '8px' }} key=\"0\">\n              <Tree />\n            </TabPane>\n            <TabPane tab=\"Settings\" style={{ padding: '8px' }} key=\"1\">\n              <Settings />\n            </TabPane>\n          </Tabs>\n        </Sider>\n        <Layout style={{ marginLeft: settings.leftSiderWidth }}>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Toolbar />\n          </Header>\n          <Content style={{ minHeight: 280, padding: '12px 8px' }}>\n            <Card\n              bordered={false}\n              style={{ width: settings.formWidth, margin: '12px 8px', display: 'inline-block', verticalAlign: 'top' }}\n            >\n              <FormView />\n            </Card>\n            {(settings.subViews || []).map((a) => {\n              const style = { margin: '12px 8px', width: 400, display: 'inline-block', verticalAlign: 'top' };\n              switch (a) {\n                case 'schema':\n                  return (\n                    <Card key=\"schema\" title=\"Schema\" style={style}>\n                      <SchemaView />\n                    </Card>\n                  );\n                case 'uiSchema':\n                  return (\n                    <Card key=\"uiSchema\" title=\"Ui Schema\" style={style}>\n                      <UiSchemaView />\n                    </Card>\n                  );\n                case 'formData':\n                  return (\n                    <Card key=\"formData\" title=\"Form Data\" style={style}>\n                      <FormDataView />\n                    </Card>\n                  );\n                default:\n                  return <div key=\"null\" />;\n              }\n            })}\n          </Content>\n        </Layout>\n        <Sider\n          width={this.props.activeNodeKey ? settings.rightSiderWidth : 0}\n          style={{\n            overflow: 'auto',\n            background: '#fff',\n            boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n            position: 'fixed',\n            height: '100vh',\n            right: 0,\n          }}\n        >\n          <NodeEditor />\n        </Sider>\n      </Layout>\n    );\n  }\n}\n\nconst AppContainer = connect(({ activeNodeKey, settings }) => ({\n  activeNodeKey,\n  settings,\n}))(App);\nexport default () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <AppContainer />\n    </PersistGate>\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}